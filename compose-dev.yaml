services:
  postgres:
    image: postgres
    container_name: postgres
    restart: on-failure:5
    ports:
      - 5432:5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-notifi}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      TZ: Pacific/Auckland
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  sqs:
      image: softwaremill/elasticmq
      container_name: sqs
      restart: on-failure:5
      ports:
        - 9324:9324
        - 9325:9325
      volumes:
        - ./sqs/custom.conf:/opt/elasticmq.conf
        - ./sqs/data:/data
      healthcheck:
        test: wget -q -S -O - 127.0.0.1:9324/?Action=ListQueues || exit 1
        interval: 10s
        timeout: 5s
        retries: 5
  
  api:
    container_name: api
    pull_policy: build
    build:
      context: .
      dockerfile: backend/Dockerfile.api
    ports:
      - 8080:8080
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-notifi}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      SQS_QUEUE_URL: ${SQS_QUEUE_URL:-http://sqs:9324}
      SQS_QUEUE_REGION: ${SQS_QUEUE_REGION:-ap-southeast-2}
      SQS_QUEUE_NAME: ${SQS_QUEUE_NAME:-notifi}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-x}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-x}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-x}
      TZ: Pacific/Auckland
    depends_on:
      postgres:
          condition: service_healthy
          restart: true
      sqs:
          condition: service_healthy
          restart: true
    develop:
      watch:
        - path: ./backend
          action: rebuild 
  
  message-delivery-worker:
    container_name: message-delivery-worker
    pull_policy: build
    build:
      context: .
      dockerfile: backend/Dockerfile.messagedeliveryworker
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-notifi}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      SQS_QUEUE_URL: ${SQS_QUEUE_URL:-http://sqs:9324}
      SQS_QUEUE_REGION: ${SQS_QUEUE_REGION:-ap-southeast-2}
      SQS_QUEUE_NAME: ${SQS_QUEUE_NAME:-notifi}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-x}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-x}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-x}
      TZ: Pacific/Auckland
    depends_on:
      postgres:
          condition: service_healthy
          restart: true
      sqs:
          condition: service_healthy
          restart: true
    develop:
      watch:
        - path: ./backend
          action: rebuild 
